{{ if .Values.components.dnsAutoScaler }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dns-autoscaler
---
apiVersion: v1
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: scale
subjects:
- kind: ServiceAccount
  name: dns-autoscaler
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dns-autoscaler
  labels:
    k8s-app: dns-autoscaler
spec:
  selector:
    matchLabels:
      k8s-app: dns-autoscaler
  template:
    metadata:
      labels:
        k8s-app: dns-autoscaler
    spec:
      serviceAccountName: dns-autoscaler
      tolerations:
        - key: scale
          operator: Exists
          effect: NoSchedule      
{{ if .Values.nodeGroupLabel }}
      nodeSelector:
        {{ .Values.nodeGroupLabel }}: core
{{ end }}      
      containers:
      - name: autoscaler
        image: {{ .Values.dnsAutoScaler.image.registry }}/{{ .Values.dnsAutoScaler.image.repository }}:{{ .Values.dnsAutoScaler.image.version }}
{{ if .Values.defineResources }}
        resources:
          requests:
            cpu: 200m
            memory: 100Mi
{{ end }}
        command:
        - /cluster-proportional-autoscaler
        - --namespace=kube-system
        - --configmap=dns-autoscaler
        - --target=deployment/coredns
        # When cluster is using large nodes(with more cores), "coresPerReplica" should dominate.
        # If using small nodes, "nodesPerReplica" should dominate.
        - --default-params={"linear":{"coresPerReplica":256,"nodesPerReplica":16,"min":1}}
        - --logtostderr=true
        - --v=2
{{ end }}
