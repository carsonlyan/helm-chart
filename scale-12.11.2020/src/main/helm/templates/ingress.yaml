{{- $root := . -}}
{{ if .Values.ingress.auth }}
apiVersion: v1
kind: Secret
metadata:
  name: ingress-basic-auth
type: Opaque
data:
  # created by htpasswd -n {user}
  auth: {{ .Values.ingress.auth.value | b64enc | quote }}
---
{{ end }}
{{- $root := . -}}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: scale-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 2g  
{{ if .Values.ingress.tls.enabled }}
{{ if .Values.ingress.tls.email }}    
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
{{ end }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"

{{ else }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
{{ end }}

{{ if .Values.ingress.whitelist }}
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ .Values.ingress.whitelist }}"
{{ end }}

{{ if .Values.ingress.auth }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: ingress-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "{{ .Values.ingress.auth.message }}"
{{ end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
        proxy_redirect http://livy:8998/ https://livy.{{ .Values.ingress.domain }}/ui;

spec:
{{ if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
{{ range $_, $web := .Values.ingress.services }}  
    - {{ $web.name }}.{{ $root.Values.ingress.domain }}
{{ end }}    
    secretName: scale-tls
{{ end }}
  rules:
{{ range $_, $web := .Values.ingress.services }}  
    - host: {{ $web.name }}.{{ $root.Values.ingress.domain }}
      http:
        paths:
          - path: /
            backend:
{{ if $root.Values.openId }}
              serviceName: gatekeeper-{{ $web.name }}
              servicePort: 80
{{ else }}
              serviceName: {{ $web.service }}
              servicePort: {{ $web.port }}
{{ end }}
{{ end }}              
