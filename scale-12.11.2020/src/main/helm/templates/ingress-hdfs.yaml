{{- $root := . -}}
{{ if .Values.components.hdfs }}
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: scale-ingress-hdfs
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 2g
    nginx.ingress.kubernetes.io/configuration-snippet: |
{{ range $index := until (.Values.hdfs.dn.scale|int) }}
        proxy_redirect http://hdfs-dn-{{ $index }}.hdfs-dn.{{ $root.Release.Namespace }}.svc.cluster.local:50075/  
        https://hdfs-dn-{{ $index }}.{{ $root.Values.ingress.domain }}/;
{{ end }}
        sub_filter_once off;
        sub_filter_types application/json;
        sub_filter 'hdfs-dn.{{ .Release.Namespace }}.svc.cluster.local' '{{ .Values.ingress.domain }}';
        sub_filter ':50075\\",\\"infoSecureAddr' ':80\\",\\"infoSecureAddr';
        sub_filter ':50075/webhdfs' ':80/webhdfs';    
    nginx.ingress.kubernetes.io/proxy-redirect-from: 'http://hdfs-nn-0.hdfs-dn.{{ .Release.Namespace }}.svc.cluster.local:50070/'
    nginx.ingress.kubernetes.io/proxy-redirect-to: 'http://hdfs-nn-0.{{ .Values.ingress.domain }}/'        
{{ if .Values.ingress.tls.enabled }}
{{ if .Values.ingress.tls.email }}    
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
{{ end }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"

{{ else }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
{{ end }}

{{ if .Values.ingress.whitelist }}
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ .Values.ingress.whitelist }}"
{{ end }}

{{ if .Values.ingress.auth }}
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: ingress-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "{{ .Values.ingress.auth.message }}"
{{ end }}

spec:
{{ if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - hdfs.{{ .Values.ingress.domain }}
{{ range $index := until (.Values.hdfs.dn.scale|int) }}
    - hdfs-dn-{{ $index }}.{{ $root.Values.ingress.domain }}
{{ end }}
    secretName: scale-hdfs-tls
{{ end }}
  rules:
    - host: hdfs.{{ .Values.ingress.domain }}
      http:
        paths:
          - path: /
            backend:
{{ if .Values.openId }}
              serviceName: gatekeeper-hdfs-nn
              servicePort: 80
{{ else }}
              serviceName: hdfs-nn
              servicePort: 50070
{{ end }}
{{ range $index := until (.Values.hdfs.dn.scale|int) }}
    - host: hdfs-dn-{{ $index }}.{{ $root.Values.ingress.domain }}
      http:
        paths:
          - path: /
            backend:
{{ if $root.Values.openId }}
              serviceName: gatekeeper-hdfs-dn-{{ $index }}
              servicePort: 80
{{ else }}              
              serviceName: hdfs-dn-{{ $index }}
              servicePort: 50075
{{ end }}
{{ end }}
{{ end }}